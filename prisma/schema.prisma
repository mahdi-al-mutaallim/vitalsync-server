generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String     @id @default(uuid())
  email               String     @unique @db.VarChar(100)
  password            String
  role                UserRole   @default(PATIENT)
  needsPasswordChange Boolean    @default(true)
  status              UserStatus @default(ACTIVE)
  createdAt           DateTime   @default(now())
  updatedAt           DateTime   @updatedAt
  admin               Admin?
  doctor              Doctor?
  patient             Patient?

  @@map("users")
}

model Admin {
  id              String    @id @default(uuid())
  name            String    @db.VarChar(100)
  email           String    @unique @db.VarChar(100)
  profilePhotoUrl String?
  isDeleted       Boolean   @default(false)
  deletedAt       DateTime?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  contactNo       String    @db.VarChar(20)
  user            User      @relation(fields: [email], references: [email])

  @@map("admins")
}

model Doctor {
  id                  String    @id @default(uuid())
  name                String    @db.VarChar(100)
  email               String    @unique @db.VarChar(100)
  profilePhotoUrl     String?
  contactNo           String    @db.VarChar(20)
  address             String?
  registrationNo      String    @unique @db.VarChar(200)
  experienceInYears   Int       @default(0)
  gender              Gender
  appointmentFee      Int
  qualification       String
  currentWorkingPlace String
  designation         String
  isDeleted           Boolean   @default(false)
  deletedAt           DateTime?
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  user                User      @relation(fields: [email], references: [email])

  @@map("doctors")
}

model Patient {
  id              String    @id @default(uuid())
  name            String    @db.VarChar(100)
  email           String    @unique @db.VarChar(100)
  profilePhotoUrl String?
  contactNo       String?   @db.VarChar(20)
  address         String?
  isDeleted       Boolean   @default(false)
  deletedAt       DateTime?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  user            User      @relation(fields: [email], references: [email])

  @@map("patients")
}

enum UserRole {
  SUPER_ADMIN
  ADMIN
  DOCTOR
  PATIENT
}

enum UserStatus {
  ACTIVE
  BLOCKED
  DELETED
}

enum Gender {
  MALE
  FEMALE
}
